; siv configuration for both PHP and Python APIs.

;;;;;;;;;;;;;;;;
; API settings ;
;;;;;;;;;;;;;;;;
[api]
; general api settings

; variables are as follows:
; 'performance' 1/0 - log performance
; 'de_restore_version' minimum api version were a trashed data entry report can still be restored (this doesn't belong in the ini file, not sure where it should be)
; 'pdf_docraptor' 1/0 - forces use of docraptor instead of PrinceXML for pdf creation
; 'docraptor_demo' 1/0 - whether to use docraptor in demo mode
; 'rel_abs_path_override' use for pdf generation on localhost using DocRaptor, ie: 'http://his.locsis.com/siv-v3/' (depreciated?)
; 'default_language' default language
; [supported_languages] array of support languages
; 'http_auth_user' HTTP auth user for cURL requests to API
; 'http_auth_password' HTTP auth password for cURL requests to API
; 'show_error_info' show additional error information
; 'log_errors' 1/0 - whether to log errors to database
; [errors_to_log] array of error codes to log, empty array of logs all errors
; 'log_debug' 1/0 - whether to log debug errors
; 'email_debug_group' group id for users to email debug information to
; 'token_expire' time in seconds that a api token expires
; 'strict_mode' 1/0 - whether api is in strict mode
; 'token' api token

performance = 0
de_restore_version = 3.18
pdf_docraptor = 0
docraptor_demo = 1
rel_abs_path_override = 
default_language = en-US
supported_languages[] = en-US
supported_languages[] = fr-FR
http_auth_user = 
http_auth_password = 
show_error_info = 1
log_errors = 1
errors_to_log = 
log_debug = 1
email_debug_group = 
token_expire = 315532800
strict_mode = 0
token = 

;;;;;;;;;;;;;;;;;;;;;;;;
; Data Entry Form Keys ;
;;;;;;;;;;;;;;;;;;;;;;;;

[de_form_keys]
; indexes used for data entry data tables
reportuuid = reportuuid
locid = locid
reportdate = reportdate
reportdateiso8601 = reportdateiso8601
timelevel = timelevel
creationdate = creationdate
userid = userid
lastchange = lastchange

;;;;;;;;;;;;;;;
; Data Souces ;
;;;;;;;;;;;;;;;

[data_sources]
; data sources are indexed by data source name (mysql, mongo, ect.)

; data source variables are as follows:
; [host] hostname of server
; [port] port to connect on
; [database] default database to connect to
; [driver] database driver
; [table_prefix] optional table prefix when using CI Active Record Class
; [p_connect] 1/0 - persistent connection
; [p_connect_key] optional persistent connection key
; [debug] 1/0 - display database errors
; [cache_on] 1/0 query caching
; [cache_dir] path to folder where cache files are stored
; [char_set] character set used in communication with the database
; [collation] character collation used in communication with the database
; [swap_pre] default table prefix that should be swapped with the table_prefix
; [auto_init] whether or not to automatically initialize the database
; [strict_on] 'Strict Mode' connections
; [return] record return type
; [query_safety] safety level of write queries. "safe" = committed in memory, "fsync" = committed to harddisk
; [supress_connect_error] 1/0 - supress connect error
; [host_db_flag] 1/0 - If running in auth mode and the user does not have global read/write then set this to true

; msql specific:
; table_prefix, debug, cache_on, cache_dir, char_set, collation, swap_pre, auto_init, strict_on

; mongo specific:
; p_connect_key, query_safety, suppress_connect_error, host_db_flag

; mysql settings
mysql[host] = localhost
mysql[port] = 
mysql[database] = data
mysql[driver] = mysql
mysql[table_prefix] = 
mysql[p_connect] = 1
mysql[debug] = 1
mysql[cache_on] = 0
mysql[cache_dir] = 
mysql[char_set] = utf8
mysql[collation] = utf8_unicode_ci
mysql[swap_pre] = 
mysql[auto_init] = 1
mysql[strict_on] = 0

; mongo settings
mongo[host] = localhost
mongo[port] = 27017
mongo[database] = siv
mongo[driver] = mongo
mongo[p_connect] = 1
mongo[p_key] = ci_mongo_persist
mongo[return] = array
mongo[query_safety] = safe
mongo[supress_connect_error] = 0
mongo[host_db_flag] = 0

; data source users, sections prefixed by corresponding data source above ([data_source]_users)

; mysql
[mysql_users]
public[username] = siv_read
public[password] = siv_pwd1
admin[username] = siv_write
admin[password] = siv_pwd2

; mongo
[mongo_users]
admin[username] = 
admin[password] = 
public[username] = 
public[password] = 

[databases]
; databases, structure is as follows:
; index = data_source.database

; mysql
app = mysql.siv_app
data = mysql.siv_data
staging = mysql.siv_staging
users = mysql.siv_users

; mongo
siv = mongo.siv

[tables]
; tables, structure is as follows:
; index = data_source.database.table_name,available_to_api,primary_key

; mysql - app
api_data_checks = mysql.app.api_data_checks,0,id
api_performance = mysql.app.api_performance,0,id
api_error_log = mysql.app.api_error_log,0,id
api_debug_log = mysql.app.api_debug_log,0,id
calendar = mysql.app.calendar,0,reportdate
config = mysql.app.config,0,token
config_details = mysql.app.config_details,0,id
icons = mysql.app.icons,0,id
de_forms = mysql.app.de_forms,0,id
de_form_controls = mysql.app.de_form_controls,0,id
de_form_layouts = mysql.app.de_form_layouts,0,id
de_form_value_mappings = mysql.app.de_form_value_mapping,0,id
de_templates = mysql.app.de_templates,0,id

; mysql - data
analytics = mysql.data.analytics,0,uuid
comments = mysql.data.comments,0,id
comment_details = mysql.data.comment_details,0,commentuuid
de_edit_log = mysql.data.meta_de_edit_log,0,id
de_ar = mysql.data.de_ar,1,reportuuid
de_bi = mysql.data.de_bi,1,reportuuid
de_bsc = mysql.data.de_bsc,1,reportuuid
de_cp = mysql.data.de_cp,1,reportuuid
de_edu = mysql.data.de_edu,1,reportuuid
de_fa = mysql.data.de_fa,1,reportuuid
de_focus = mysql.data.de_focus,1,reportuuid
de_lab_sc = mysql.data.de_lab_sc,1,reportuuid
de_md = mysql.data.de_md,1,reportuuid
de_nut = mysql.data.de_nut,1,reportuuid
de_outbreaks = mysql.data.de_outbreaks,1,reportuuid
de_outbreak_details = mysql.data.de_outbreak_details,1,reportuuid
de_pop = mysql.data.de_pop,1,reportuuid
de_stratplan = mysql.data.de_stratplan,1,reportuuid
de_reports_init = mysql.data.meta_de_report_init,1,reportuuid
de_trash = mysql.data.meta_de_trash,0,id
de_unaids = mysql.data.de_unaids,1,reportuuid
de_wash = mysql.data.de_wash,1,reportuuid
de_wb = mysql.data.de_wb,1,reportuuid
de_weekly = mysql.data.de_weekly,1,reportuuid
de_weekly_details = mysql.data.de_weekly_details,1,reportuuid
documents = mysql.data.documents,0,id
email_queue = mysql.data.queue_email,0,uuid
indicators = mysql.data.indicators,0,uuid
indicator_details = mysql.data.indicator_details,0,uuid
indicator_sets = mysql.data.indicator_details_sets,0,setid
indicator_set_details = mysql.data.indicator_details_set_details,0,id
locations = mysql.data.locations,0,locid
location_details = mysql.data.location_details,0,locid
notifications = mysql.data.notifications,0,id
partners = mysql.data.partners,0,id
partner_details = mysql.data.partner_details,0,id
queue_dataedit = mysql.data.queue_dataedit,0,uuid
review_status = mysql.data.review_status,1,reportuuid
review_details = mysql.data.review_status_details,1,reportuuid

; mysql - staging
his_reportingcalendar = mysql.staging.his_reportingcalendar,0,ID
excel_schemas = mysql.staging.excel_schemas,0,id

; mysql = users
users = mysql.users.users,0,id
usermeta = mysql.users.users_details,0,metaid
users_permissions = mysql.users.users_permissions,0,id
users_login_status = mysql.users.users_login_status,0,id
users_groups = mysql.users.users_groups,0,id
groups = mysql.users.groups,0,groupid
users_oauth = mysql.users.users_oauth,0,id
user_form = mysql.users.forms,0,id
user_form_details = mysql.users.form_details,0,id
tokens = mysql.users.tokens,0,id

; mongo - siv
his = mongo.siv.his,1,reportuuid
de_foodaid = mongo.siv.de_foodaid,1,reportuuid
de_urban = mongo.siv.de_urban,1,reportuuid
queue = mongo.siv.queue,1,queue_id

;;;;;;;;;;;;;;;;;;
; Email Settings ;
;;;;;;;;;;;;;;;;;;

[email]
; email settings

; variables are as follows:
; 'send' 1/0 - whether to send emails
; 'host' hostname of mail server
; 'port' post to connect on
; 'username' username
; 'password' password
; 'protocol' email protocol
; 'sender' sender
; 'recipients' email addresses for test recipients (comma delimited)
; 'site_name' site name to use in emails
; 'crfl' - cartridge return\line feed
; 'newline' - new line

; PHP API specific:
; send, site_name, protocol, port, crlf, newline

; Python API specific:
; sender

send = 0
host = ssl://smtp.googlemail.com
port = 465
username = locsis.webhis@gmail.com
password = --locsiswebhispwd--
protocol = smtp
sender = username
recipients = jeff@jdu-it.co.uk,mark.yarmoshuk@gmail.com
site_name = twine

;;;;;;;;;;;;;;;;;;;;;;
; Filestore Settings ;
;;;;;;;;;;;;;;;;;;;;;;
[filestore]
; main document repository for the application (this is where report pdfs are written and files are  uploaded)

; variables are as follows:
; 'location' specifies which file_location to use (these are set below)
; 'folder' folder in location where files are stored
; 'backup_file_path' file path for automated backups

location = local
folder = webReports/
backup_file_path =

[filestore_locations]
; different filestore location settings
;
; variables are as follows:
; [cons_key] connection key
; [cons_secret] connection secret
; [oauth_token] oauth token
; [oauth_token_secret] oauth token secret
; [path_from_root] path from root
; [access_type] access type:
;				'dropbox' if app is set up for full access
;				'sandbox' if app is set up for a folder
; [group_id] group id

; local specific:
; path from root

; dropbox specific:
; access_type

; mendeley specific:
; group_id

; local
local[path_from_root] = /var/www/siv-v3/filestore

;;;;;;;;;;;;;;;;;;
; oAuth Settings ;
;;;;;;;;;;;;;;;;;;

[oauth]
; oauth settings
;
; variables are as follows:
; [supported_providers] array of supported oauth providers
; 'google_client_id' google client id
; 'google_client_secret' google client secret
; 'yahoo_client_id' yahoo client id
; 'yahoo_client_secret' yahoo client secret
; 'facebook_client_id' facebook client id
; 'facebook_client_secret' facebook client secret

supported_providers[] = Goggle
supported_providers[] = Yahoo!
supported_providers[] = Facebook
google_client_id = 
google_client_secret = 
yahoo_client_id = 
yahoo_client_secret = 
facebook_client_id = 
facebook_client_secret = 

;;;;;;;;;;;;;;;;;
; User Settings ;
;;;;;;;;;;;;;;;;;

[users]
; settings used by PHP API for user system
;
; variables are as follows:
; 'salt' salt used in password hashing
; 'verification' 1/0 - whether new users need to verifiy account via email
; 'cookie_name' name of user cookie
; 'cookie_expire' time in seconds cookie expires
; 'cookie_expire_remember' time in seconds cookie expires for 'rememeber me' mode
; [default_user_groups] group numbers to add new users to by email domain name, wildcard accepted
; 'master_password' master password for users

salt = 
verification = 1
cookie_name = webhis_user
cookie_expire = 14400
cookie_expire_remember = 2592000
default_user_groups[*] = 
default_user_groups[unhcr.org] = 5,6
master_password = 

;;;;;;;;;;;;;;;
; ETL General ;
;;;;;;;;;;;;;;;

; General ETL Settings
[etl_general]
debug = False
api_debug = False
log_path = /var/www/logs
request_loggin = False
threading = False
log_finished_report = False

; ETL Security items
[etl_security]
api_token = ENTER_AN_API_TOKEN
enforce_token = False

enforce_allowed_domains = False
allowed_domains = localhost,127.0.0.1

ignored_indicators = reportdate
    reportuuid
    reportid
    timelevel
    locid
    name
    _id
    DATE_ENTERED
    isprimarydate
    id
    lastchange
    manifest
    HLTHFAC
    COORD_EMAIL
    creationdate
    XLS_VERSION
    bEdited1
    bEdited2
    REPORT_ID

; Settings for Flask ETL that tells it which sub-applications to load
[modules]
job = /etl
status = /status
performance = /performance
intelligence = /intelligence
quality = /quality
api = /api
anomalous = /anomalous

; Settings for anomaly detector
[anomalous]
FULL_DURATION = 3
ANOMALY_DUMP = /var/www/flaskapps/dump/anomalies.json
ANALYZER_PROCESSES = 5
STALE_PERIOD = 500
MIN_TOLERABLE_LENGTH = 1
MAX_TOLERABLE_BOREDOM = 5

ALGORITHMS = mean_subtraction_cumulation
    simple_stddev_from_moving_average
    stddev_from_moving_average
    grubbs
    histogram_bins

CONSENSUS = 5

; Settings pertaining to the Job Scheduler system in Python, mainly used for the queue
[scheduler]
; Whether or not the scheduler is enabled
SCHEDULER_ENABLED = True
; The interval (in seconds) that the scheduler will run
SCHEDULER_INTERVAL = 30
; The number of josb the scheduler will take on in each run
SCHEDULER_TACKLE = 8
; Where the scheduler logs to
SCHEDULER_LOG_FILE = /var/www/logs/sheduler_log.log
